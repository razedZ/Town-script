local success, HttpService = pcall(game.GetService, game, "HttpService")
local success2, TweenService = pcall(game.GetService, game, "TweenService")
local success3, UserInputService = pcall(game.GetService, game, "UserInputService")

if not (success and success2 and success3) or not HttpService or not TweenService or not UserInputService then
    warn("Required services (HttpService, TweenService, or UserInputService) are not available. Script will not function fully.")
    return
end

local PizdecWare = {}
PizdecWare.__index = PizdecWare

function PizdecWare:CreateWindow(guiName, infoText, saveFileName)
    local ScreenGui = Instance.new("ScreenGui")
    if not ScreenGui then return nil end
    ScreenGui.Parent = game:GetService("CoreGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.Name = guiName

    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Color3.fromRGB(19, 21, 25)
    MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.0323343836, 0, 0.194723621, 0)
    MainFrame.Size = UDim2.new(0, 630, 0, 460)
    MainFrame.BackgroundTransparency = 1
    MainFrame.Active = true -- Enable dragging

    local UICorner = Instance.new("UICorner")
    UICorner.Parent = MainFrame

    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    MainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    MainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    local Logo = Instance.new("Frame")
    Logo.Name = "Logo"
    Logo.Parent = MainFrame
    Logo.BackgroundColor3 = Color3.fromRGB(150, 17, 255)
    Logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Logo.BorderSizePixel = 0
    Logo.Position = UDim2.new(0.0215927847, 0, 0.0306019653, 0)
    Logo.Size = UDim2.new(0, 25, 0, 25)
    Logo.ZIndex = 3
    Logo.BackgroundTransparency = 0

    local UICorner_17 = Instance.new("UICorner")
    UICorner_17.Parent = Logo

    local W = Instance.new("TextLabel")
    W.Name = "W"
    W.Parent = Logo
    W.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    W.BackgroundTransparency = 1
    W.BorderColor3 = Color3.fromRGB(0, 0, 0)
    W.BorderSizePixel = 0
    W.Position = UDim2.new(0.28230226, 0, 0.75999999, 0)
    W.Size = UDim2.new(0, 23, 0, -14)
    W.ZIndex = 4
    W.Font = Enum.Font.SourceSansBold
    W.Text = "W"
    W.TextColor3 = Color3.fromRGB(0, 0, 0)
    W.TextSize = 20.000
    W.TextTransparency = 1

    local PizdecWareLabel = Instance.new("TextLabel")
    PizdecWareLabel.Name = "PizdecWare"
    PizdecWareLabel.Parent = Logo
    PizdecWareLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    PizdecWareLabel.BackgroundTransparency = 1
    PizdecWareLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
    PizdecWareLabel.BorderSizePixel = 0
    PizdecWareLabel.Position = UDim2.new(2.21097422, 0, 1.29638064, 0)
    PizdecWareLabel.Size = UDim2.new(0, 60, 0, -41)
    PizdecWareLabel.ZIndex = 4
    PizdecWareLabel.Font = Enum.Font.SourceSansBold
    PizdecWareLabel.Text = "PizdecWare"
    PizdecWareLabel.TextColor3 = Color3.fromRGB(150, 17, 255)
    PizdecWareLabel.TextSize = 25.000
    PizdecWareLabel.TextTransparency = 1

    local P = Instance.new("TextLabel")
    P.Name = "P"
    P.Parent = Logo
    P.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    P.BackgroundTransparency = 1
    P.BorderColor3 = Color3.fromRGB(0, 0, 0)
    P.BorderSizePixel = 0
    P.Position = UDim2.new(-0.304138184, 0, 0.75999999, 0)
    P.Size = UDim2.new(0, 27, 0, -14)
    P.ZIndex = 4
    P.Font = Enum.Font.SourceSansBold
    P.Text = "P"
    P.TextColor3 = Color3.fromRGB(255, 255, 255)
    P.TextSize = 20.000
    P.TextTransparency = 1

    local Info = Instance.new("TextLabel")
    Info.Name = "Info"
    Info.Parent = MainFrame
    Info.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Info.BackgroundTransparency = 1
    Info.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Info.BorderSizePixel = 0
    Info.Position = UDim2.new(0.0543069504, 0, 0.0833290443, 0)
    Info.Size = UDim2.new(0, 116, 0, 10)
    Info.Font = Enum.Font.SourceSansBold
    Info.Text = infoText or ""
    Info.TextColor3 = Color3.fromRGB(170, 176, 183)
    Info.TextSize = 10.000
    Info.TextXAlignment = Enum.TextXAlignment.Right
    Info.TextTransparency = 1

    local ElementContainer = Instance.new("Frame")
    ElementContainer.Name = "ElementContainer"
    ElementContainer.Parent = MainFrame
    ElementContainer.Active = true
    ElementContainer.BackgroundColor3 = Color3.fromRGB(23, 24, 28)
    ElementContainer.BorderColor3 = Color3.fromRGB(66, 63, 71)
    ElementContainer.BorderSizePixel = 0
    ElementContainer.LayoutOrder = 3
    ElementContainer.Position = UDim2.new(0.259076893, 0, 0.116228454, 0)
    ElementContainer.Size = UDim2.new(0, 460, 0, 400)
    ElementContainer.ZIndex = 3
    ElementContainer.BackgroundTransparency = 1

    local UICorner_2 = Instance.new("UICorner")
    UICorner_2.Parent = ElementContainer

    local UIStroke = Instance.new("UIStroke")
    UIStroke.Parent = ElementContainer
    UIStroke.Color = Color3.fromRGB(0, 0, 0)
    UIStroke.Transparency = 0.8
    UIStroke.Thickness = 1

    -- Разделение ElementContainer на левую и правую части
    local LeftContainer = Instance.new("Frame")
    LeftContainer.Name = "LeftContainer"
    LeftContainer.Parent = ElementContainer
    LeftContainer.BackgroundColor3 = Color3.fromRGB(23, 24, 28)
    LeftContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
    LeftContainer.BorderSizePixel = 0
    LeftContainer.Position = UDim2.new(0, 0, 0, 0)
    LeftContainer.Size = UDim2.new(0.5, 0, 1, 0)
    LeftContainer.BackgroundTransparency = 1

    local RightContainer = Instance.new("Frame")
    RightContainer.Name = "RightContainer"
    RightContainer.Parent = ElementContainer
    RightContainer.BackgroundColor3 = Color3.fromRGB(23, 24, 28)
    RightContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
    RightContainer.BorderSizePixel = 0
    RightContainer.Position = UDim2.new(0.5, 0, 0, 0)
    RightContainer.Size = UDim2.new(0.5, 0, 1, 0)
    RightContainer.BackgroundTransparency = 1

    local Line = Instance.new("Frame")
    Line.Name = "Line"
    Line.Parent = ElementContainer
    Line.Active = true
    Line.BackgroundColor3 = Color3.fromRGB(23, 24, 28)
    Line.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Line.BorderSizePixel = 0
    Line.LayoutOrder = 3
    Line.Position = UDim2.new(1.32685116e-07, 0, -0.124946594, 0)
    Line.Size = UDim2.new(0, 0, 0, 57)
    Line.ZIndex = 3

    local UICorner_3 = Instance.new("UICorner")
    UICorner_3.Parent = Line

    local function fadeIn(element)
        if not TweenService then return end
        local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
        if element:IsA("TextLabel") or element:IsA("TextButton") then
            local initialTransparency = element.TextTransparency
            local tween = TweenService:Create(element, tweenInfo, {
                TextTransparency = initialTransparency == 1 and 0 or initialTransparency
            })
            tween:Play()
        elseif element:IsA("ImageLabel") or element:IsA("ImageButton") then
            local initialTransparency = element.ImageTransparency
            local tween = TweenService:Create(element, tweenInfo, {
                ImageTransparency = initialTransparency == 1 and 0 or initialTransparency
            })
            tween:Play()
        else
            local initialTransparency = element.BackgroundTransparency
            local tween = TweenService:Create(element, tweenInfo, {
                BackgroundTransparency = initialTransparency == 1 and 0 or initialTransparency
            })
            tween:Play()
        end
    end

    wait(0)
    fadeIn(MainFrame)
    fadeIn(Logo)
    fadeIn(W)
    fadeIn(PizdecWareLabel)
    fadeIn(P)
    fadeIn(Info)
    fadeIn(ElementContainer)
    fadeIn(Line)
    wait(1)

    local TabZone = Instance.new("Frame")
    TabZone.Name = "TabZone"
    TabZone.Parent = MainFrame
    TabZone.BackgroundColor3 = Color3.fromRGB(23, 24, 28)
    TabZone.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TabZone.BorderSizePixel = 0
    TabZone.Position = UDim2.new(0, 0, 0.116228454, 0)
    TabZone.Size = UDim2.new(0, 163, 0, 399)
    TabZone.ZIndex = 4
    TabZone.BackgroundTransparency = 1
    local UICorner_TabZone = Instance.new("UICorner")
    UICorner_TabZone.Parent = TabZone

    local Tabs = Instance.new("TextLabel")
    Tabs.Name = "Tabs"
    Tabs.Parent = TabZone
    Tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Tabs.BackgroundTransparency = 1
    Tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Tabs.BorderSizePixel = 0
    Tabs.Position = UDim2.new(0.0449740589, 0, 0.036599841 + (26/399/2) - (20/399/2), 0)
    Tabs.Size = UDim2.new(0, 50, 0, 20)
    Tabs.Font = Enum.Font.ArialBold
    Tabs.Text = "Tabs"
    Tabs.TextColor3 = Color3.fromRGB(147, 152, 156)
    Tabs.TextSize = 14.000
    Tabs.TextTransparency = 0
    Tabs.TextXAlignment = Enum.TextXAlignment.Left
    Tabs.ZIndex = 5
    fadeIn(Tabs)

    local SelectedTab = Instance.new("Frame")
    SelectedTab.Name = "SelectedTab"
    SelectedTab.Parent = TabZone
    SelectedTab.BackgroundColor3 = Color3.fromRGB(150, 17, 255)
    SelectedTab.BackgroundTransparency = 0.900
    SelectedTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
    SelectedTab.BorderSizePixel = 0
    SelectedTab.Position = UDim2.new(0, 0, 0.0476190485, 0)
    SelectedTab.Size = UDim2.new(0, 163, 0, 30)
    SelectedTab.ZIndex = 2
    fadeIn(SelectedTab)

    local ImageButton = Instance.new("ImageButton")
    ImageButton.Parent = MainFrame
    ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton.BackgroundTransparency = 1
    ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton.BorderSizePixel = 0
    ImageButton.Position = UDim2.new(0.949206471, 0, 0.0173913036, 0)
    ImageButton.Size = UDim2.new(0, 25, 0, 25)
    ImageButton.Image = "rbxassetid://12653789995"
    ImageButton.ImageTransparency = 1
    fadeIn(ImageButton)

    local currentTab = nil
    local function selectTab(tab, image)
        if TweenService then
            local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear)
            
            if tab ~= currentTab then
                for _, child in ipairs(TabZone:GetChildren()) do
                    if child:IsA("TextLabel") and child ~= Tabs then
                        local childImage = child:FindFirstChild("TabImage")
                        local textTween = TweenService:Create(child, tweenInfo, {
                            TextColor3 = Color3.fromRGB(147, 152, 156)
                        })
                        textTween:Play()
                        child.BackgroundTransparency = 1
                        
                        if childImage then
                            local imageTween = TweenService:Create(childImage, tweenInfo, {
                                ImageColor3 = Color3.fromRGB(147, 152, 156)
                            })
                            imageTween:Play()
                            childImage.BackgroundTransparency = 1
                        end
                    end
                end
                
                local tabTween = TweenService:Create(tab, tweenInfo, {
                    TextColor3 = Color3.fromRGB(150, 17, 255)
                })
                tabTween:Play()
                tab.BackgroundTransparency = 1
                
                local imageTween = TweenService:Create(image, tweenInfo, {
                    ImageColor3 = Color3.fromRGB(150, 17, 255)
                })
                imageTween:Play()
                image.BackgroundTransparency = 1

                local newPosition = UDim2.new(0, 0, tab.Position.Y.Scale, 0)
                local moveTween = TweenService:Create(SelectedTab, tweenInfo, { Position = newPosition })
                moveTween:Play()

                -- Скрыть/показать секции в зависимости от таба
                for _, container in pairs({LeftContainer, RightContainer}) do
                    for _, section in pairs(container:GetChildren()) do
                        if section:IsA("Frame") and section:FindFirstChild("ShowSection") then
                            local sectionTab = section:GetAttribute("Tab")
                            if sectionTab == tab then
                                TweenService:Create(section, TweenInfo.new(0.2, Enum.EasingStyle.Quad), { Size = UDim2.new(0, 200, 0, 150), BackgroundTransparency = 0 }):Play()
                                for _, child in pairs(section:GetChildren()) do
                                    if child ~= section:FindFirstChild("ShowSection") and child ~= section:FindFirstChild("Label") then
                                        TweenService:Create(child, TweenInfo.new(0.2, Enum.EasingStyle.Quad), { TextTransparency = 0 }):Play()
                                    end
                                end
                                TweenService:Create(section:FindFirstChild("Line"), TweenInfo.new(0.2, Enum.EasingStyle.Quad), { BackgroundTransparency = 0 }):Play()
                            else
                                TweenService:Create(section, TweenInfo.new(0.2, Enum.EasingStyle.Quad), { Size = UDim2.new(0, 200, 0, 30), BackgroundTransparency = 1 }):Play()
                                for _, child in pairs(section:GetChildren()) do
                                    if child ~= section:FindFirstChild("ShowSection") and child ~= section:FindFirstChild("Label") then
                                        TweenService:Create(child, TweenInfo.new(0.2, Enum.EasingStyle.Quad), { TextTransparency = 1 }):Play()
                                    end
                                end
                                TweenService:Create(section:FindFirstChild("Line"), TweenInfo.new(0.2, Enum.EasingStyle.Quad), { BackgroundTransparency = 1 }):Play()
                            end
                        end
                    end
                end

                currentTab = tab
            end
        end
    end

    function PizdecWare:CreateTab(visualName, imageId)
        if not TweenService then return nil end
        local tabCount = #TabZone:GetChildren() - 2 -- Exclude Tabs and SelectedTab
        local spacing = 0.0902255669
        local initialOffset = 0.0100250627 + (Tabs.Size.Y.Scale * 2) + 0.004
        local newPosition = UDim2.new(0.30674848, 0, initialOffset + (tabCount * spacing), 2)
        
        local tab = Instance.new("TextLabel")
        tab.Name = visualName
        tab.Parent = TabZone
        tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tab.BackgroundTransparency = 1
        tab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        tab.BorderSizePixel = 0
        tab.Position = newPosition
        tab.Size = UDim2.new(0, 101, 0, 28)
        tab.Font = Enum.Font.SourceSansBold
        tab.Text = visualName
        tab.TextColor3 = Color3.fromRGB(147, 152, 156)
        tab.TextSize = 20.000
        tab.TextTransparency = 0
        tab.TextXAlignment = Enum.TextXAlignment.Left
        tab.ZIndex = 5
        fadeIn(tab)

        local image = Instance.new("ImageLabel")
        image.Name = "TabImage"
        image.Parent = tab
        image.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        image.BackgroundTransparency = 1
        image.BorderColor3 = Color3.fromRGB(0, 0, 0)
        image.BorderSizePixel = 0
        image.Position = UDim2.new(-0.364666939, 0, 0.036599841, 0)
        image.Size = UDim2.new(0, 26, 0, 26)
        image.ZIndex = 5
        image.Image = "rbxassetid://" .. imageId
        image.ImageColor3 = Color3.fromRGB(147, 152, 156)
        image.ImageTransparency = 0
        fadeIn(image)

        tab.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                selectTab(tab, image)
            end
        end)

        image.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                selectTab(tab, image)
            end
        end)

        if not currentTab then
            selectTab(tab, image)
        end

        return tab
    end

    function PizdecWare:CreateSection(sectionName, tab, side)
        if not TweenService then return nil end
        local container = (side == "left" and LeftContainer) or (side == "right" and RightContainer) or LeftContainer
        local sectionCount = #container:GetChildren()

        local section = Instance.new("Frame")
        section.Name = sectionName
        section.Parent = container
        section.BackgroundColor3 = Color3.fromRGB(17, 19, 23)
        section.BorderColor3 = Color3.fromRGB(0, 0, 0)
        section.BorderSizePixel = 0
        section.Position = UDim2.new(0, 5, 0, sectionCount * 160)
        section.Size = UDim2.new(0, 200, 0, 150)
        section.BackgroundTransparency = 0
        section.ZIndex = 4
        section:SetAttribute("Tab", tab) -- Привязка секции к табу

        local UICornerSection = Instance.new("UICorner")
        UICornerSection.CornerRadius = UDim.new(0, 3)
        UICornerSection.Parent = section

        local SectionLine = Instance.new("Frame")
        SectionLine.Name = "Line"
        SectionLine.Parent = section
        SectionLine.BackgroundColor3 = Color3.fromRGB(66, 63, 71)
        SectionLine.BorderColor3 = Color3.fromRGB(20, 21, 25)
        SectionLine.BorderSizePixel = 0
        SectionLine.Position = UDim2.new(0.0449740589, 0, 0.200355425, 0)
        SectionLine.Size = UDim2.new(0, 180, 0, -1)
        SectionLine.ZIndex = 4
        fadeIn(SectionLine)

        local SectionLabel = Instance.new("TextLabel")
        SectionLabel.Name = "Label"
        SectionLabel.Parent = section
        SectionLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        SectionLabel.BackgroundTransparency = 1
        SectionLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
        SectionLabel.BorderSizePixel = 0
        SectionLabel.Position = UDim2.new(0.0849743634, 0, 0, 0)
        SectionLabel.Size = UDim2.new(0, 100, 0, 29)
        SectionLabel.Font = Enum.Font.ArialBold
        SectionLabel.Text = sectionName
        SectionLabel.TextColor3 = Color3.fromRGB(147, 152, 156)
        SectionLabel.TextSize = 14.000
        SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
        SectionLabel.ZIndex = 5
        fadeIn(SectionLabel)

        local ShowSectionButton = Instance.new("TextButton")
        ShowSectionButton.Name = "ShowSection"
        ShowSectionButton.Parent = section
        ShowSectionButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ShowSectionButton.BackgroundTransparency = 1
        ShowSectionButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ShowSectionButton.BorderSizePixel = 0
        ShowSectionButton.Position = UDim2.new(0.860000014, 0, 0.0666666701, 0)
        ShowSectionButton.Size = UDim2.new(0, 10, 0, 10)
        ShowSectionButton.Font = Enum.Font.SourceSans
        ShowSectionButton.Text = "▼"
        ShowSectionButton.TextColor3 = Color3.fromRGB(147, 152, 156)
        ShowSectionButton.TextSize = 14.000
        ShowSectionButton.ZIndex = 5
        fadeIn(ShowSectionButton)

        -- Добавление кнопки в стиле оригинального UI
        local Button = Instance.new("TextButton")
        Button.Name = "Button"
        Button.Parent = section
        Button.BackgroundColor3 = Color3.fromRGB(24, 29, 32)
        Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Button.BorderSizePixel = 0
        Button.Position = UDim2.new(0.0599743649, 0, 0.25999999, 0)
        Button.Size = UDim2.new(0, 30, 0, 20)
        Button.Font = Enum.Font.SourceSans
        Button.Text = ""
        Button.TextColor3 = Color3.fromRGB(0, 0, 0)
        Button.TextSize = 14.000
        Button.ZIndex = 5

        local UICornerButton = Instance.new("UICorner")
        UICornerButton.CornerRadius = UDim.new(0, 4)
        UICornerButton.Parent = Button

        local ButtonText = Instance.new("TextLabel")
        ButtonText.Name = "ToggleText"
        ButtonText.Parent = Button
        ButtonText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ButtonText.BackgroundTransparency = 1
        ButtonText.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ButtonText.BorderSizePixel = 0
        ButtonText.Position = UDim2.new(1.35000002, 0, -0.200000003, 0)
        ButtonText.Size = UDim2.new(0, 100, 0, 24)
        ButtonText.Font = Enum.Font.SourceSansBold
        ButtonText.Text = "Button"
        ButtonText.TextColor3 = Color3.fromRGB(147, 152, 156)
        ButtonText.TextSize = 17.000
        ButtonText.TextXAlignment = Enum.TextXAlignment.Left
        ButtonText.ZIndex = 6
        fadeIn(ButtonText)

        -- Логика сворачивания/разворачивания секции
        local isCollapsed = false
        ShowSectionButton.MouseButton1Click:Connect(function()
            isCollapsed = not isCollapsed
            local targetSize = isCollapsed and UDim2.new(0, 200, 0, 30) or UDim2.new(0, 200, 0, 150)
            ShowSectionButton.Text = isCollapsed and "▲" or "▼"

            local sizeTween = TweenService:Create(section, TweenInfo.new(0.3, Enum.EasingStyle.Quad), { Size = targetSize })
            local lineTween = TweenService:Create(SectionLine, TweenInfo.new(0.2, Enum.EasingStyle.Quad), { BackgroundTransparency = isCollapsed and 1 or 0 })
            sizeTween:Play()
            lineTween:Play()

            for _, child in pairs(section:GetChildren()) do
                if child ~= ShowSectionButton and child ~= SectionLabel and child ~= SectionLine then
                    local childTween = TweenService:Create(child, TweenInfo.new(0.2, Enum.EasingStyle.Quad), { TextTransparency = isCollapsed and 1 or 0 })
                    childTween:Play()
                    if isCollapsed then
                        childTween.Completed:Wait() -- Ждем завершения анимации прозрачности
                        local moveTween = TweenService:Create(section, TweenInfo.new(0.1, Enum.EasingStyle.Quad), { Position = UDim2.new(0, 5, 0, section.Position.Y.Offset + 120) })
                        moveTween:Play()
                    else
                        local moveTween = TweenService:Create(section, TweenInfo.new(0.1, Enum.EasingStyle.Quad), { Position = UDim2.new(0, 5, 0, sectionCount * 160) })
                        moveTween:Play()
                    end
                end
            end
        end)

        fadeIn(section)
        return section
    end

    return setmetatable({}, PizdecWare)
end

return PizdecWare
